---

- name: Make sure folder library exists with subfolders
  file: >
    state=directory
    recurse=yes
    path="{{ item }}"
  with_items:
    - "{{ media_path }}/Downloads"
    - "{{ media_path }}/Series"
    - "{{ media_path }}/Movies"
    - "{{ media_path }}/Music"

# - name: Install Owncloud
#   docker:
#     docker_api_version: "{{ docker_version }}"
#     net: bridge
#     name: owncloud
#     detach: yes
#     restart_policy: always
#     ports:
#       - "{{ owncloud_port }}:80"
#     volumes:
#       - "{{ media_path }}:/var/www/html/data/admin/files"
#     env:
#       VIRTUAL_HOST: "cloud.{{ domain_name }}"
#       VIRTUAL_PORT: "80"
#     image: owncloud:latest
#     state: started

- name: Install Pydio
  docker:
    docker_api_version: "{{ docker_version }}"
    net: bridge
    name: pydio
    detach: yes
    restart_policy: always
    volumes:
      - "{{ media_path }}:/data/files"
      - "/etc/localtime:/etc/localtime:ro"
    env:
      PUID: "{{ media_puid }}"
      PGID: "{{ media_pgid }}"
      VIRTUAL_HOST: "pydio.{{ domain_name }}"
      VIRTUAL_PORT: "443"
      VIRTUAL_PROTO: "https"
    image: linuxserver/pydio
    state: started

- name: Install Deluge
  docker:
    docker_api_version: "{{ docker_version }}"
    net: bridge
    name: deluge
    restart_policy: always
    ports:
      - "{{ deluge_client_port }}:8112"
      - "{{ deluge_host_port }}:58846"
    volumes:
      - "{{ media_path }}/Downloads:/downloads"
    env:
      PUID: "{{ media_puid }}"
      PGID: "{{ media_pgid }}"
      VIRTUAL_HOST: "torrent.{{ domain_name }}"
      VIRTUAL_PORT: "8112"
    image: linuxserver/deluge
    state: started

- name: Install Plex
  docker:
    docker_api_version: "{{ docker_version }}"
    net: bridge
    name: plex
    restart_policy: always
    ports:
      - "{{ plex_port }}:32400"
    volumes:
      - "{{ media_path }}:/data"
    env:
      PUID: "{{ media_puid }}"
      PGID: "{{ media_pgid }}"
      VERSION: plexpass
      VIRTUAL_HOST: "plex.{{ domain_name }}"
      VIRTUAL_PORT: "32400"
    image: linuxserver/plex
    state: started

- name: Install Koel Database
  docker:
    docker_api_version: "{{ docker_version }}"
    net: bridge
    name: koel-db
    restart_policy: always
    env:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "forge"
    image: mysql
    state: started

- name: Install Koel Front
  docker:
    docker_api_version: "{{ docker_version }}"
    net: bridge
    name: koel
    restart_policy: always
    links:
      - "koel-db:koel-db"
    volumes:
      - "{{ media_path }}/Music:/DATA/music"
    env:
      DB_HOST: "koel-db"
      DB_DATABASE: "forge"
      DB_USERNAME: "root"
      DB_PASSWORD: "root"
      ADMIN_EMAIL: "loric.brevet@gmail.com"
      ADMIN_NAME: "admin"
      ADMIN_PASSWORD: "media01"
      APP_DEBUG: true
      AP_ENV: production
      VIRTUAL_HOST: "koel.{{ domain_name }}"
      VIRTUAL_PORT: "80"
    image: etopian/docker-koel
    state: started

- name: Install Couchpotato
  docker:
    docker_api_version: "{{ docker_version }}"
    net: bridge
    name: couchpotato
    restart_policy: always
    ports:
      - "{{ couchpotato_port }}:5050"
    volumes:
      - "{{ media_path }}/Downloads:/downloads"
      - "{{ media_path }}/Movies:/movies"
      - "/etc/localtime:/etc/localtime:ro"
    env:
      PUID: "{{ media_puid }}"
      PGID: "{{ media_pgid }}"
      VIRTUAL_HOST: "couchpotato.{{ domain_name }}"
      VIRTUAL_PORT: "5050"
    image: linuxserver/couchpotato
    state: started

- name: Install Sonarr
  docker:
    docker_api_version: "{{ docker_version }}"
    net: bridge
    name: sonarr
    restart_policy: always
    ports:
      - "{{ sonarr_port }}:8989"
    volumes:
      - "{{ media_path }}/Downloads:/downloads"
      - "{{ media_path }}/Series:/tv"
      - "/dev/rtc:/dev/rtc:ro"
    env:
      PUID: "{{ media_puid }}"
      PGID: "{{ media_pgid }}"
      VIRTUAL_HOST: "sonarr.{{ domain_name }}"
      VIRTUAL_PORT: "8989"
    image: linuxserver/sonarr
    state: started

- name: Install Sickrage
  docker:
    docker_api_version: "{{ docker_version }}"
    net: bridge
    name: sickrage
    restart_policy: always
    ports:
      - "{{ sickrage_port }}:8081"
    volumes:
      - "{{ media_path }}/Downloads:/downloads"
      - "{{ media_path }}/Series:/tv"
      - "/etc/localtime:/etc/localtime:ro"
    env:
      PUID: "{{ media_puid }}"
      PGID: "{{ media_pgid }}"
      VIRTUAL_HOST: "sickrage.{{ domain_name }}"
      VIRTUAL_PORT: "8081"
    image: linuxserver/sickrage
    state: started

- name: Install Headphones
  docker:
    docker_api_version: "{{ docker_version }}"
    net: bridge
    name: headphones
    restart_policy: always
    ports:
      - "{{ headphones_port }}:8181"
    volumes:
      - "{{ media_path }}/Downloads:/downloads"
      - "{{ media_path }}/Music:/music"
      - "/etc/localtime:/etc/localtime:ro"
    env:
      PUID: "{{ media_puid }}"
      PGID: "{{ media_pgid }}"
      VIRTUAL_HOST: "headphones.{{ domain_name }}"
      VIRTUAL_PORT: "8181"
    image: linuxserver/headphones
    state: started