---

- name: Make sure folder library exists with subfolders
  file: >
    state=directory
    recurse=yes
    path="{{ item }}"
  with_items:
    - "{{ library_path }}/Downloads"
    - "{{ library_path }}/Series"
    - "{{ library_path }}/Movies"

- name: Install Owncloud
  docker:
    docker_api_version: "{{ docker_version }}"
    net: bridge
    name: owncloud
    detach: yes
    restart_policy: always
    ports:
      - "{{ owncloud_port }}:80"
    volumes:
      - "{{ library_path }}:/var/www/html/data/admin/files"
    env:
      VIRTUAL_HOST: cloud.lobr.fr
    image: owncloud:latest
    state: started

- name: Install Deluge
  docker:
    docker_api_version: "{{ docker_version }}"
    net: bridge
    name: deluge
    restart_policy: always
    ports:
      - "{{ deluge_client_port }}:8112"
      - "{{ deluge_host_port }}:58846"
    volumes:
      - "{{ library_path }}/Downloads:/downloads"
    env:
      PUID: "{{ puid }}"
      PGID: "{{ pgid }}"
      VIRTUAL_HOST: torrent.lobr.fr
      VIRTUAL_PORT: "8112"
    image: linuxserver/deluge
    state: started

- name: Install Plex
  docker:
    docker_api_version: "{{ docker_version }}"
    net: bridge
    name: plex
    restart_policy: always
    ports:
      - "{{ plex_port }}:32400"
    volumes:
      - "{{ library_path }}:/data"
    env:
      PUID: "{{ puid }}"
      PGID: "{{ pgid }}"
      VERSION: plexpass
      VIRTUAL_HOST: plex.lobr.fr
    image: linuxserver/plex
    state: started

- name: Install Couchpotato
  docker:
    docker_api_version: "{{ docker_version }}"
    net: bridge
    name: couchpotato
    restart_policy: always
    ports:
      - "{{ couchpotato_port }}:5050"
    volumes:
      - "{{ library_path }}/Downloads:/downloads"
      - "{{ library_path }}/Movies:/movies"
      - "/etc/localtime:/etc/localtime:ro"
    env:
      PUID: "{{ puid }}"
      PGID: "{{ pgid }}"
      VIRTUAL_HOST: couchpotato.lobr.fr
    image: linuxserver/couchpotato
    state: started

- name: Install Sonarr
  docker:
    docker_api_version: "{{ docker_version }}"
    net: bridge
    name: sonarr
    restart_policy: always
    ports:
      - "{{ sonarr_port }}:8989"
    volumes:
      - "{{ library_path }}/Downloads:/downloads"
      - "{{ library_path }}/Series:/tv"
      - "/dev/rtc:/dev/rtc:ro"
    env:
      PUID: "{{ puid }}"
      PGID: "{{ pgid }}"
      VIRTUAL_HOST: sonarr.lobr.fr
    image: linuxserver/sonarr
    state: started

